<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yxw.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.yxw.pojo.Users" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="DATE" />
    <result column="last_logintime" property="lastLogintime" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_code, password, email, gender, register_time, last_logintime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectByNamePass" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from users
    where user_code = #{userCode}
    AND  password = #{password}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yxw.pojo.Users" >
    insert into users (user_id, user_code, password, 
      email, gender, register_time, 
      last_logintime)
    values (#{userId,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{registerTime,jdbcType=DATE}, 
      #{lastLogintime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.yxw.pojo.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="lastLogintime != null" >
        last_logintime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=DATE},
      </if>
      <if test="lastLogintime != null" >
        #{lastLogintime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yxw.pojo.Users" >
    update users
    <set >
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=DATE},
      </if>
      <if test="lastLogintime != null" >
        last_logintime = #{lastLogintime,jdbcType=DATE},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yxw.pojo.Users" >
    update users
    set user_code = #{userCode,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=DATE},
      last_logintime = #{lastLogintime,jdbcType=DATE}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>