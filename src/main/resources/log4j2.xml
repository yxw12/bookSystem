<?xml version="1.0" encoding="utf-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="warn" monitorInterval="30">
    <properties>
        <!-- 变量定义 -->
        <Property name="baseDir">logs/</Property>
        <!-- 文件输出格式 -->
        <property name="log_pattern">%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %logger{36}.%M() @%L - %m%n
        </property>
        <property name="file_name">house_info</property>
        <property name="error_file_name">house_error</property>
        <property name="warn_file_name">house_warn</property>
        <property name="debug_file_name">house_debug</property>
        <property name="rolling_file_name">-%d{yyyy-MM-dd-HH}.%i</property>
        <!-- 日志切割的最小单位 -->
        <property name="every_file_size">100M</property>
    </properties>
    <!--先定义所有的appender-->
    <Appenders>
    <!-- 输出到控制台 -->
    <Console name="console" target="SYSTEM_OUT">
        <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
        <ThresholdFilter level="debug" onMatch="ACCEPT"/>
        <!--输出日志的格式 -->
        <PatternLayout pattern="${log_pattern}"/>
    </Console>

        <!-- 输出不同级别的日志到不同的文件下 -->
        <RollingFile name="infoFile" fileName="${baseDir}${file_name}.log"
                     filePattern="${baseDir}${file_name}${rolling_file_name}.log">
            <PatternLayout pattern="${log_pattern}"/>
            <Filters>
                <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
                <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <Policies>
                <!--<TimeBasedTriggeringPolicy/>-->
                <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            </Policies>
        </RollingFile>

        <RollingFile name="warnFile" fileName="${baseDir}${warn_file_name}.log"
                     filePattern="${baseDir}${warn_file_name}${rolling_file_name}.log">
            <PatternLayout pattern="${log_pattern}"/>
            <Filters>
                <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <Policies>
                <!--<TimeBasedTriggeringPolicy/>-->
                <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>

        <RollingFile name="errorFile" fileName="${baseDir}${error_file_name}.log"
                     filePattern="${baseDir}${error_file_name}${rolling_file_name}.log">
            <PatternLayout pattern="${log_pattern}"/>
            <ThresholdFilter level="ERROR" onMatch="ACCEPT"/>
            <Policies>
                <!--<TimeBasedTriggeringPolicy/>-->
                <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            </Policies>
        </RollingFile>


        <RollingFile name="debugFile" fileName="${baseDir}${debug_file_name}.log"
                     filePattern="${baseDir}${debug_file_name}${rolling_file_name}.log">
            <PatternLayout pattern="${log_pattern}"/>
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <Filters>
                <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <Policies>
                <!--<TimeBasedTriggeringPolicy/>-->
                <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            </Policies>
        </RollingFile>
    </Appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <Logger name="org.springframework" level="INFO"/>
        <Logger name="org.mybatis" level="INFO"/>

        <!-- 下面是通过配置log4j2，仅仅打印出单个mapper的SQL语句的配置-->
        <logger name="com.yxw.dao.BookInfoMapper" level="debug"/>

        <root level="info">
            <appender-ref ref="console"/>
            <appender-ref ref="infoFile"/>
            <appender-ref ref="warnFile"/>
            <appender-ref ref="errorFile"/>
            <appender-ref ref="debugFile"/>
        </root>
    </loggers>


</configuration>